library(ncdf4)
library(raster)
rm(list = ls())
library(EBImage
)
setwd("../../code/")
prf = list.files("../data/MERG/")
prf
prf = list.files("../data/MERG/", pattern = ".nc")
prf
dt_dir = "../data/MERG/"
paste0(dt_dir, "/",prf[i] )
for(i in 1:length(prf)){
paste0(dt_dir, "/",prf[i] )
}
for(i in 1:length(prf)){
print(paste0(dt_dir, "/",prf[i] ))
}
dt_dir = "../data/MERG"
for(i in 1:length(prf)){
print(paste0(dt_dir,"/", prf[i] ))
}
stringfile = c("Starttime is: ",
"Endtime is: ",
"Life duration is ",
"Time of maturity is ",
"Duration mature stage is: ",
"Average area is: ",
"Max area is: ",
"Max area time is: ",
"Eccentricity at max area is: ",
"Center (lat,lon) at max area is: ",
"Propagation speed is ")
stringfile
txt = read.csv(file = "../data/MCSsUserFile.txt", sep = "\n")
dim(txt)
txt)
txt
txt = read.csv(file = "../data/MCSsUserFile.txt", sep = "\n", header = F)
txt
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana, ]
return(hasil)
}
stringfile[1]
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
txt = c(as.matrix(txt))
txt
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana, ]
return(hasil)
}
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana]
return(hasil)
}
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
nchar("Starttime is: 2007-10-27 00:30:00")
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana]
if(uniq_str == "Starttime is: "){
jmlstr = nchar("Starttime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
}
return(hasil)
}
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana]
if(uniq_str == "Starttime is: "){
jmlstr = nchar("Starttime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
hasil = strsplit(hasil, split = uniq_str)[[1]][2]
}
return(hasil)
}
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana]
if(uniq_str == "Starttime is: "){
jmlstr = nchar("Starttime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
for(i in 1:length(hasil)){
hasil = strsplit(hasil, split = uniq_str)[[1]][2]
}
}
return(hasil)
}
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana]
if(uniq_str == "Starttime is: "){
jmlstr = nchar("Starttime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
for(i in 1:length(hasil)){
hasil[i] = strsplit(hasil[i], split = uniq_str)[[1]][2]
}
}
return(hasil)
}
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[2])
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana]
if(uniq_str == "Starttime is: "){
jmlstr = nchar("Starttime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
for(i in 1:length(hasil)){
hasil[i] = strsplit(hasil[i], split = uniq_str)[[1]][2]
}
}else if(uniq_str == "Endtime is: "){
jmlstr = nchar("Endtime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
for(i in 1:length(hasil)){
hasil[i] = strsplit(hasil[i], split = uniq_str)[[1]][2]
}
}
return(hasil)
}
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[2])
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana]
if(uniq_str == "Starttime is: "){
jmlstr = nchar("Starttime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
for(i in 1:length(hasil)){
hasil[i] = strsplit(hasil[i], split = uniq_str)[[1]][2]
}
}else if(uniq_str == "Endtime is: "){
jmlstr = nchar("Endtime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
for(i in 1:length(hasil)){
hasil[i] = strsplit(hasil[i], split = uniq_str)[[1]][2]
}
}
return(hasil)
}
filter_str(MCS_USERFILE = txt, uniq_str = stringfile[2])
t0 = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
tn = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[2])
t0
tn
as.POSIXct(t0)
as.POSIXct(t0) - as.POSIXct(tn)
abs(as.POSIXct(t0) - as.POSIXct(tn))
t0 = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
tn = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[2])
interval = abs(as.POSIXct(t0) - as.POSIXct(tn))
interval
t0 = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
tn = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[2])
interval = c(abs(as.POSIXct(t0) - as.POSIXct(tn)))
interval
t0 = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[1])
tn = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[2])
interval = as.vector(abs(as.POSIXct(t0) - as.POSIXct(tn)))
interval
res = data.frame(Awal = t0, Akhir = tn, Durasi = interval)
res
res
system("mkdir ../hasil")
write.table(file = "../hasil/awal_akhir.csv", res, row.names = F, col.names = T)
t0 = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[3])
t0
hasil_semua = list()
for(i in 1:length(stringfile)){
hasil_semua[[i]] = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[i])
}
hasil_semua
stringfile[10]
txt
n = "Center (lat,lon) at max area is: -1.51\t129.20"
grep (n, pattern = "\\t")
grep (txt, pattern = "\\t")
txt[grep (txt, pattern = "\\t")]
baru_txt = gsub (x = txt, pattern = "\\t", replacement = " bujurlintang ")
baru_txt
hasil_semua = list()
for(i in 1:length(stringfile)){
hasil_semua[[i]] = filter_str(MCS_USERFILE = baru_txt, uniq_str = stringfile[10])
}
hasil_semua
baru_txt
hasil_semua = list()
for(i in 1:length(stringfile)){
hasil_semua[[i]] = filter_str(MCS_USERFILE = baru_txt, uniq_str = stringfile[i])
}
hasil_semua
stringfile = c("Starttime is: ",
"Endtime is: ",
"Life duration is ",
"Time of maturity is ",
"Duration mature stage is: ",
"Average area is: ",
"Max area is: ",
"Max area time is: ",
"Eccentricity at max area is: ",
# "Center (lat,lon) at max area is: ",
" bujurlintang ",
"Propagation speed is ")
#!/usr/bin/Rscript
rm(list = ls())
stringfile = c("Starttime is: ",
"Endtime is: ",
"Life duration is ",
"Time of maturity is ",
"Duration mature stage is: ",
"Average area is: ",
"Max area is: ",
"Max area time is: ",
"Eccentricity at max area is: ",
# "Center (lat,lon) at max area is: ",
" bujurlintang ",
"Propagation speed is ")
txt = read.csv(file = "../data/MCSsUserFile.txt", sep = "\n", header = F)
txt = c(as.matrix(txt))
filter_str = function(MCS_USERFILE, uniq_str){
mana = grep(MCS_USERFILE, pattern = uniq_str)
hasil = MCS_USERFILE[mana]
if(uniq_str == "Starttime is: "){
jmlstr = nchar("Starttime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
for(i in 1:length(hasil)){
hasil[i] = strsplit(hasil[i], split = uniq_str)[[1]][2]
}
}else if(uniq_str == "Endtime is: "){
jmlstr = nchar("Endtime is: 2007-10-27 00:30:00")
hasil = substr(hasil, 1, jmlstr)
for(i in 1:length(hasil)){
hasil[i] = strsplit(hasil[i], split = uniq_str)[[1]][2]
}
}
return(hasil)
}
t0 = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[3])
t0
t0 = filter_str(MCS_USERFILE = txt, uniq_str = stringfile[10])
t0
stringfile[10]
baru_txt = gsub (x = txt, pattern = "\\t", replacement = " bujurlintang ")
t0 = filter_str(MCS_USERFILE = baru_txt, uniq_str = stringfile[10])
t0
t0
strsplit(t0, split = " ")
strsplit(t0, split = " ")[[1]]
strsplit(t0, split = " ")[[1]][7]
strsplit(t0, split = " ")[[1]][9]
lon = c()
lat = c()
for(i in 1:length(lonlat)){
lon[i] = strsplit(lonlat[i], split = " ")[[1]][7]
lat[i] = strsplit(lonlat[i], split = " ")[[1]][9]
}
lonlat = filter_str(MCS_USERFILE = baru_txt, uniq_str = stringfile[10])
lon = c()
lat = c()
for(i in 1:length(lonlat)){
lon[i] = strsplit(lonlat[i], split = " ")[[1]][7]
lat[i] = strsplit(lonlat[i], split = " ")[[1]][9]
}
lon
lat
lonlat = filter_str(MCS_USERFILE = baru_txt, uniq_str = stringfile[10])
lon = c()
lat = c()
for(i in 1:length(lonlat)){
lon[i] = as.numeric(strsplit(lonlat[i], split = " ")[[1]][7])
lat[i] = as.numeric(strsplit(lonlat[i], split = " ")[[1]][9])
}
lon
lat
plot(x =lon, y = lat)
lon = c()
lat = c()
for(i in 1:length(lonlat)){
lat[i] = as.numeric(strsplit(lonlat[i], split = " ")[[1]][7])
lon[i] = as.numeric(strsplit(lonlat[i], split = " ")[[1]][9])
}
plot(x =lon, y = lat)
library(maps)
map(add = T)
plot(x =lon, y = lat, col = "red")
library(maps)
map(add = T)
plot(x =lon, y = lat, col = "red", xlim = c(90, 150), ylim  = c(-15, 15))
library(maps)
map(add = T)
